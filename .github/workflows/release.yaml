name: Release

on: [ push ]


jobs:
  build:
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        include:

          - OS: macos-11
            PYTHON_VERSION: 3.10.10
            BUILD_CMD: |
              export PYTHONHASHSEED=42
              export BUILD_FILE_NAME=operator-${RELEASE_VERSION}-darwin-amd64;
              mkdir ${BUILD_FILE_NAME};
              brew install postgresql
              brew install krb5
              pip3 install psycopg2-binary
              brew reinstall apr-util
              git rev-parse --short HEAD > GIT_SHA
              poetry run pyinstaller \
                --distpath ./${BUILD_FILE_NAME} \
                ./operator.spec;
              tar -zcvf ${BUILD_FILE_NAME}.tar.gz ${BUILD_FILE_NAME};
              mkdir /tmp/artifacts;
              cp ${BUILD_FILE_NAME}.tar.gz /tmp/artifacts;
              shasum -a 256 ${BUILD_FILE_NAME}.tar.gz | head -c 64 > /tmp/artifacts/${BUILD_FILE_NAME}.sha256

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.3.2"

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Build executable for ${{ matrix.OS }}
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: ${{ matrix.BUILD_CMD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.OS }}
          path: /tmp/artifacts/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: /tmp/artifacts

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: /tmp/artifacts

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            /tmp/artifacts/ubuntu-20.04/operator-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz
            /tmp/artifacts/ubuntu-20.04/operator-${{ steps.get_version.outputs.VERSION }}-linux-amd64.sha256
            /tmp/artifacts/macos-11/operator-${{ steps.get_version.outputs.VERSION }}-darwin-amd64.tar.gz
            /tmp/artifacts/macos-11/operator-${{ steps.get_version.outputs.VERSION }}-darwin-amd64.sha256
            /tmp/artifacts/windows-latest/operator-${{ steps.get_version.outputs.VERSION }}-windows-amd64.zip
            /tmp/artifacts/windows-latest/operator-${{ steps.get_version.outputs.VERSION }}-windows-amd64.sha256
